; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

(load-plugins)


(rabbitmq-plugin/amqp-consumer {
                       :parser-fn rabbitmq-plugin/logstash-parser ; message parsing function, the sample function here is the default
                       :prefetch-count 100 ; this is the default
                       :bindings [{
                         :opts {:durable false :auto-delete true} ; this is the default
                         :queue "" ; the default is "" which means auto-generated queue name
                         :bind-to {"logs", ["a"]} ; also works with single non-seq binding key
                         :tags ["amqp"] ; will be added to event tags
                       }]
                       :connection-opts {:host "sensu_rabbitmq_1" :port 5672 :username "guest" :passowrd "guest"} ; default is {}
                       })

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "127.0.0.1"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))


; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      #(info %))))

      ; Log expired events.
      ;(expired
      ;  (fn [event] (info "expired" event))))))

