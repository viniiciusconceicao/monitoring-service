version: "3"
services:

  elasticsearch:
    image: elasticsearch:5
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /srv/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - esnet
    deploy:
      mode: global
      restart_policy:
        condition: any
# nginx:
#   image: 'nginx:1'
#   ports:
#     - '9200:9200'
#   command: |
#     /bin/bash -c "echo '
#      server {
#        listen 9200;
#        add_header X-Frame-Options "SAMEORIGIN";
#        location / {
#            proxy_pass http://elasticsearch:9200;
#            proxy_http_version 1.1;
#            proxy_set_header Connection keep-alive;
#            proxy_set_header Upgrade $$http_upgrade;
#            proxy_set_header Host $$host;
#            proxy_set_header X-Real-IP $$remote_addr;
#            proxy_cache_bypass $$http_upgrade;
#        }
#      }' | tee /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
#   deploy:
#     restart_policy:
#       condition: any
#     placement:
#       constraints:
#         - node.role == manager
  kibana:
    image: kibana:5
    ports:
      - "5601:5601"
    networks:
      - esnet
    depends_on:
      - elasticsearch
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager

  consul:
    image: consul:latest
    ports:
      - '8500:8500'
    environment:
      - 'CONSUL_BIND_INTERFACE=eth0'
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
    networks:
      - rmqnet
    command: [ "agent", "-server","-ui","-client", "0.0.0.0", "-bootstrap-expect","1","-retry-join","consul" ]
    deploy:
#      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager

  rabbitmq:
    image: 'rabbitmq:autocluster'
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - 'AUTOCLUSTER_TYPE=consul'
      - 'CONSUL_HOST=consul'
      - 'CONSUL_PORT=8500'
      - 'CONSUL_SVC=rabbitmq'
      - 'CONSUL_SVC_ADDR_AUTO=true'
      - 'AUTOCLUSTER_CLEANUP=true'
      - 'CLEANUP_WARN_ONLY=false'
      - 'RABBITMQ_ERLANG_COOKIE=secrect'
    networks:
      - rmqnet
    deploy:
#      mode: global
      restart_policy:
        condition: any
#      placement:
#        constraints:
#          - node.role == manager
  logstash_indexer:
    image: 'logstash:indexer'
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./logstash_indexer/config:/etc/logstash/conf.d
    depends_on:
      - elasticsearch
      - rabbitmq
    networks:
      - rmqnet
      - esnet
      - influxnet
    deploy:
#      mode: global
      restart_policy:
        condition: any
#      placement:
#        constraints:
#          - node.role == manager
  logstash_shipper:
    image: 'logstash:shipper'
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./logstash_shipper/config:/etc/logstash/conf.d
      - ./logstash_shipper/jmx:/etc/logstash/jmx
    ports:
      - "5044:5044"
      - "4712:4712"
      - "4713:4713"
      - "4715:4715"
    depends_on:
      - rabbitmq
    networks:
      - rmqnet
    deploy:
#      mode: global
      restart_policy:
        condition: any
#      placement:
#        constraints:
#          - node.role == manager
  influxdba:
    image: influxdb:cluster
#    ports:
#      - "8083:8083"
#      - "8086:8086"
#      - "8089:8089/udp"
#      - "2003:2003"
    environment:
      - 'FORCE_HOSTNAME=influxdba'
      - 'PRE_CREATE_DB=sensu'
      - 'UDP_DB=sensu'
      - 'UDP_PORT=8089'
      - 'COLLECTD_DB=collectd'
      - 'GRAPHITE_DB=jvm'
#    volumes:
#      - /srv/influxdb:/data
#    volumes:
#      - /home/ubuntu/influx:/data
    networks:
      influxnet:
        aliases:
          - influxdb
    deploy:
#      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  influxdb:
    image: influxdb:cluster
 #   ports:
 #     - "8083:8083"
 #     - "8086:8086"
 #     - "8089:8089/udp"
 #     - "2003:2003"
    environment:
      - 'FORCE_HOSTNAME=auto'
      - 'JOIN=influxdba:8088'
#    volumes:
#      - /srv/influx:/data
#    volumes:
#      - /home/ubuntu/influx:/data
    networks:
      - influxnet
    depends_on:
      - influxdba
    deploy:
#     mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == worker
  grafana:
    image: grafana/grafana:2.6.0
    volumes:
      -  /srv/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - influxnet
      - esnet
    deploy:
#      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  redis:
    image: redis
    volumes:
      - /srv/redis:/data
    networks:
      - sensunet
    deploy:
#      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  server:
    image: sstarcher/sensu:0.23.2
    command: server
    networks:
      - rmqnet
      - sensunet
      - influxnet
    volumes:
      - ../sensu/conf.d:/etc/sensu/conf.d
      - ../sensu/check.d:/etc/sensu/check.d
      - ../sensu/handlers:/etc/sensu/handlers
      - ../sensu/extensions:/etc/sensu/extensions
      - ../sensu/plugins:/etc/sensu/plugins
    environment:
      RABBITMQ_PORT: 5672
      RUNTIME_INSTALL: snmp
    depends_on:
      - redis
      - rabbitmq
    deploy:
#      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  collectd:
    image: collectd:cluster
    volumes:
      - ../collectd/conf.d:/etc/collectd/collectd.conf.d
      - /srv/collectd:/var/lib/collectd
    networks:
      - influxnet
    deploy:
#      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  uchiwa:
    image: sstarcher/uchiwa:0.15.0
    networks:
      - sensunet
    ports:
      - '80:3000'
    volumes:
      - ../sensu/uchiwa/uchiwa.json:/etc/sensu/uchiwa.json:ro
    depends_on:
      - server
      - api
  api:
    image: sstarcher/sensu:0.23.2
    command: api
    networks:
      - rmqnet
      - sensunet
    volumes:
      - ../sensu/check.d:/etc/sensu/check.d
    environment:
      RABBITMQ_PORT: 5672
    depends_on:
      - server
      - rabbitmq
networks:
  rmqnet:
  esnet:
  influxnet:
  sensunet:
