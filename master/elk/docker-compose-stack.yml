version: "3"
services:

  elasticsearch:
    image: agoryachev/docker-swarm-elasticsearch:5.4.0
    ports:
      - "9200:9200"
    networks:
      - elastic_cluster
    environment:
      - SERVICE_NAME=elasticsearch
      - discovery.zen.minimum_master_nodes=2
    volumes:
      - /home/ubuntu/data/elasticsearch:/usr/share/elasticsearch/data
    deploy:
      mode: global
      restart_policy:
        condition: any
  kibana:
    image: docker.elastic.co/kibana/kibana:5.4.3
    ports:
      - "5601:5601"
    networks:
      - elastic_cluster
    depends_on:
      - elasticsearch
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  consul:
    image: consul:0.9.0
    ports:
      - '8500:8500'
    environment:
      - 'CONSUL_BIND_INTERFACE=eth0'
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
    networks:
      - rmqnet
    command: [ "agent", "-server","-ui","-client", "0.0.0.0", "-bootstrap-expect","1","-retry-join","consul" ]
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager

  rabbitmq:
    image: 'rabbitmq:autocluster'
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - 'AUTOCLUSTER_TYPE=consul'
      - 'CONSUL_HOST=consul'
      - 'CONSUL_PORT=8500'
      - 'CONSUL_SVC=rabbitmq'
      - 'CONSUL_SVC_ADDR_AUTO=true'
      - 'AUTOCLUSTER_CLEANUP=true'
      - 'CLEANUP_WARN_ONLY=false'
      - 'RABBITMQ_ERLANG_COOKIE=secrect'
    networks:
      - rmqnet
    deploy:
#      mode: global
      restart_policy:
        condition: any
#      placement:
#        constraints:
#          - node.role == manager
  logstash_indexer:
    image: 'logstash:indexer'
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./logstash_indexer/config:/etc/logstash/conf.d
    depends_on:
      - elasticsearch
      - rabbitmq
    networks:
      - rmqnet
      - elastic_cluster 
      - influxnet
    deploy:
      restart_policy:
        condition: any
  logstash_shipper:
    image: 'logstash:shipper'
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./logstash_shipper/config:/etc/logstash/conf.d
      - ./logstash_shipper/jmx:/etc/logstash/jmx
    ports:
      - "5044:5044"
      - "4712:4712"
      - "4713:4713"
      - "4715:4715"
      - "2003:2003"
    depends_on:
      - rabbitmq
    networks:
      - rmqnet
    deploy:
      restart_policy:
        condition: any
  influxdba:
    image: influxdb:cluster
    environment:
      - 'FORCE_HOSTNAME=influxdba'
      - 'PRE_CREATE_DB=sensu'
      - 'UDP_DB=sensu'
      - 'UDP_PORT=8089'
      - 'COLLECTD_DB=collectd'
      - 'GRAPHITE_DB=jvm'
      - 'COLLECTD_BINDING=:2011'
    volumes:
      -  /home/ubuntu/data/influx:/data
    networks:
      influxnet:
        aliases:
          - influxdb
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
#  influxdb:
#    image: influxdb:cluster
#    environment:
#      - 'FORCE_HOSTNAME=auto'
#      - 'JOIN=influxdba:8088'
  #  volumes:
  #    -  /home/ubuntu/data/influx:/data
#    networks:
#      - influxnet
#    depends_on:
#      - influxdba
#    deploy:
#     mode: global
#      restart_policy:
#        condition: any
#      placement:
#        constraints:
#          - node.role == worker
  grafana:
    image: grafana/grafana:latest
    environment:
      - 'GF_SMTP_ENABLED=true'
      - 'GF_SMTP_HOST=smtp.dcc.ufmg.br:587'
      - 'GF_SMTP_USER=DCC_USER'
      - 'GF_SMTP_PASSWORD=DCC_PASS'
      - 'GF_SMTP_FROM_ADDRESS=grafana@pdu.speed.dcc.ufmg.br'
      - 'GF_SERVER_ROOT_URL=http://controller-pdu-02:3000'
    volumes:
      -  /home/ubuntu/data/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - influxnet
      - elastic_cluster 
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  redis:
    image: redis:latest
    networks:
      - sensunet
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  server:
    image: sstarcher/sensu:0.23.2
    command: server
    networks:
      - rmqnet
      - sensunet
      - influxnet
    volumes:
      - ../sensu/conf.d:/etc/sensu/conf.d
      - ../sensu/check.d:/etc/sensu/check.d
      - ../sensu/handlers:/etc/sensu/handlers
      - ../sensu/extensions:/etc/sensu/extensions
      - ../sensu/plugins:/etc/sensu/plugins
    environment:
      RABBITMQ_PORT: 5672
      RUNTIME_INSTALL: mailer
    depends_on:
      - redis
      - rabbitmq
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  collectd:
    image: collectd:cluster
    volumes:
      - ../collectd/conf.d:/etc/collectd/collectd.conf.d
    depends_on:
      - influxdba
    networks:
      - influxnet
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
  uchiwa:
    image: sstarcher/uchiwa:0.25.2
    networks:
      - sensunet
    ports:
      - '80:3000'
    volumes:
      - ../sensu/uchiwa/uchiwa.json:/etc/sensu/uchiwa.json:ro
    depends_on:
      - server
      - api
  api:
    image: sstarcher/sensu:0.23.2
    command: api
    networks:
      - rmqnet
      - sensunet
    volumes:
      - ../sensu/check.d:/etc/sensu/check.d
    environment:
      RABBITMQ_PORT: 5672
    depends_on:
      - server
      - rabbitmq
networks:
  rmqnet:
  influxnet:
  sensunet:
  elastic_cluster:
       external: true

