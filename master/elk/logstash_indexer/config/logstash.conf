input {
  rabbitmq {
    exchange => "logs"
    exchange_type => "fanout"
    durable => true
    host => "rabbitmq"
    auto_delete => false
    queue => "logstash_logs"
  } 

  rabbitmq {
    exchange => "metrics"
    exchange_type => "fanout"
    durable => true
    host => "rabbitmq"
    auto_delete => false
    queue => "logstash_metrics"
  }
}



filter {

  if  [message] =~ "Replaying log path:" {
        drop { }
  }

  if  [_type] == "logs" or [type] == "logs" or [check.type] == "metric"  or [check] {
        drop { }
  }

  if  [type] == "HistoryServer"{
     grok {
        match => { "file" => "%{GREEDYDATA}/%{GREEDYDATA:AppID}.inprogress" }
     }
     json { 
       source => "message"
       remove_field => [ "message" ]
    }
  }

  if  [type] == "Spark"{
     grok {
        match => { "application" => [ "%{HOSTNAME:hostname}--%{GREEDYDATA}/%{GREEDYDATA:AppID}/%{GREEDYDATA:containerID}", "%{HOSTNAME:hostname}--$" ] }
     }
  }

  if  [type] == "Hadoop" and [tags] {
  
     grok {
        match => { "message" => [ "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{HOUR:hour}:%{MINUTE:min}:%{SECOND:second},%{NUMBER:line} %{WORD:priority} %{DATA:logger_name}: %{GREEDYDATA:message}" ] }
        overwrite => [ "message" ]
     }

     mutate {
         add_field => { "hostname" => "%{[tags][1]}" }
     }

  }
#  if  [type] == "Hadoop" and [tags] {
#       grok {
#        match => { "tags" => [ %{WORD:hostname}" ] }
#     }
#  }


}

output {

  if [type] == "jmx" {
          #graphite {
          #  host => "sensu_influxdb_1"
          #  port => 2003
          #  metrics => { "%{metric_path}" => "%{metric_value_number}" }
          #}
  } else {
          elasticsearch {
            hosts => "elasticsearch:9200"
          }

  }

}

